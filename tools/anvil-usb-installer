#!/usr/bin/perl
# 
# This ISO takes an Anvil! installer ISO and writes it to a USB drive suitable for a USB-based install of 
# Striker dashboard machines.
# 
# (c) Alteeve's Niche! Inc, 2016 - https://alteeve.ca
# 
# This program is released under the GPL v2+
# 
# Return Codes
# 0  = Successful run
# 

use strict;
use warnings;
use IO::Handle;
use Data::Dumper;

my $THIS_FILE           =  ($0 =~ /^.*\/(.*)$/)[0];
my $running_directory   =  ($0 =~ /^(.*?)\/$THIS_FILE$/)[0];
if (($running_directory =~ /^\./) && ($ENV{PWD}))
{
	        $running_directory =~ s/^\./$ENV{PWD}/;
}

my $conf = {
	# Executable programs. We will search for these in PATH if not pre-defined (start with '/...').
	executable	=>	{
		createrepo	=>	"createrepo",
		cp		=>	"cp",
		curl		=>	"curl",
		git		=>	"git",
		isoinfo		=>	"isoinfo",
		'iso-read'	=>	"iso-read",
		md5sum		=>	"md5sum",
		mkisofs		=>	"mkisofs",
		mount		=>	"mount",
	},
	# Paths to files and directories
	path		=>	{
	},
	sys		=>	{
		debug		=>	0,
		required	=>	{
			parted			=>	0,
			'syslinux-nonlinux'	=>	0, 
		},
		support_url	=>	"https://alteeve.ca/w/Support",
	},
};

get_switches($conf);
$conf->{sys}{debug} = 1 if $conf->{switches}{debug};
if (($conf->{switches}{h})    or 
    ($conf->{switches}{'?'})  or 
    ($conf->{switches}{help}) or 
    (not $conf->{switches}{source}))
{
	print_usage($conf);
	exit(0);
}

# Enable debugging if the user requested it.
$conf->{sys}{debug} = 1 if $conf->{switches}{v};
$conf->{sys}{debug} = 2 if $conf->{switches}{vv};
$conf->{sys}{debug} = 3 if $conf->{switches}{vvv};



#############################################################################################################
# Functions                                                                                                 #
#############################################################################################################

# Print the usage information.
sub print_usage
{
	my ($conf) = @_;
	
	my $help = "
 -=] Anvil! - Generate USB Installer

DESCRIPTION

This program takes an Anvil! ISO build with 'anvil-generate-iso' and writes it
to a USB drive. This is not a direct 'dd' of the ISO, additional steps are 
needed to insure all the files (including a copy of the original ISO itself)
are available for the kickstart files.


SWITCHES

-h, -?, --help

	Show this dialoge and exit.

--iso </path/to/Anvil.iso>

	This is the path (full or relative) to the ISO to use when generating
	the USB installer.

--usb </dev/sdX>

	This is the path to the root of the USB device to use. Do not specify
	a partition. That is, use '/dev/sdb', not '/dev/sdb1'.
	
	WARNING: THIS WILL ENTIRELY WIPE ANY AND ALL DATA ON THE TARGET USB
		DEVICE! Be very certain that you have pointed at the right
		device!

-v, -vv, -vvv

	Enable debugging output (each additional 'v' increases the verbosity).


EXAMPLES

	Generate a bootable USB device using a RHEL-based Anvil! image writing
	to a USB drive found at '/dev/sdb'.
	
	./anvil-usb-installer --iso ./Anvil_m2_RHEL_6.7_alpha.iso --usb /dev/sdb
	
                  
SUPPORT

$conf->{sys}{support_url}

                                                          Alteeve's Niche! Inc.
";
	open (my $file_handle, ">", "/tmp/${THIS_FILE}.help") or die __LINE__."; Couldn't write help to /tmp/, error was: $!\n";
	print $file_handle $help;
	close $file_handle;
	
	system("/usr/bin/less /tmp/${THIS_FILE}.help");

	return(0);
}

#!/usr/bin/perl

use strict;
use warnings;
require "./an-cwm.lib";
our $THIS_FILE = "an-cwm.lib";

my $conf={
	clusters		=>	{
		'cc-cluster-A'		=>	{
			description		=>	"CC Systems \"Cluster A\" (in Peer 1)",
			nodes			=>	["il0049.remote", "il0050.remote"],
		},
		'an-cluster-A'		=>	{
			description		=>	"Alteeve's Niche! \"Cluster A\" (in Peer 1)",
			nodes			=>	["an-node01", "an-node02"],
# 			nodes			=>	["an-node01.remote", "an-node02.remote"],
# 			nodes			=>	["an-c01n01", "an-c01n02"],
		},
	},
	nodes			=>	"",
	check_using_node	=>	"",
	up_nodes		=>	[],
	path			=>	{
		cluster_conf		=>	"/etc/cluster/cluster.conf",
		'log'			=>	"/var/log/an-cwm.log",
		lvdisplay		=>	"/sbin/lvdisplay",
		ping			=>	"/usr/bin/ping",
		ssh			=>	"/usr/bin/ssh",
	},
	handles			=>	{
		'log'			=>	"",
	},
	'system'		=>	{
		debug			=>	1,
		username		=>	getpwuid( $< ),
		config_read		=>	0,
	},
};

# If there is only one cluster defined, use it. Note that I need a special
# exception in get_cgi_vars() for this to work properly.
if (not $conf->{cgi}{cluster})
{
	my @cluster_name;
	foreach my $cluster (keys %{$conf->{clusters}})
	{
		push @cluster_name, $cluster;
	}
	if (@cluster_name == 1)
	{
		$conf->{cgi}{cluster} = $cluster_name[0];
	}
}

get_cgi_vars($conf);
header($conf);

if ($conf->{cgi}{cluster})
{
	if ($conf->{cgi}{task})
	{
		process_task($conf);
	}
	else
	{
		# Set the node list.
		my $cluster = $conf->{cgi}{cluster};
		$conf->{nodes} = $conf->{clusters}{$cluster}{nodes};
		set_node_names($conf);
		check_nodes($conf);
		# This will only get set if one of the two nodes were up.
		if (@{$conf->{up_nodes}} > 0)
		{
			check_host($conf);
			check_drbd($conf);
			check_gfs2($conf);
			check_clvmd($conf);
			check_daemons($conf);
			check_vms($conf);
		}
		display_details($conf);
	}
}
else
{
	# Ask the user which cluster they want to look at.
	ask_which_cluster($conf);
}
footer($conf);

exit (0);

#!/usr/bin/perl
#
# AN!CDB - Alteeve's Niche! Cluster Dashboard
# 
# This software is released under the GNU GPL v2+ license.
# 
# No warranty is provided. Do not use this software unless you are willing and
# able to take full liability for it's use. The authors take care to prevent
# unexpected side effects when using this program. However, no software is
# perfect and bugs may exist which could lead to hangs or crashes in the
# program, in your cluster and possibly even data loss.
# 
# If you are concerned about these risks, please stick to command line tools.
# 
# This program is designed to extend clusters built according to this tutorial:
# - https://alteeve.com/w/2-Node_Red_Hat_KVM_Cluster_Tutorial
#
# This program's source code and updates are available on Github:
# - https://github.com/digimer/an-cdb
#
# Author;
# Alteeve's Niche!  -  https://alteeve.com
# Madison Kelly     -  mkelly@alteeve.ca
# 
# TODO:
# - Read and cache each cluster's /etc/hosts file.
# - Check to see if a VM is running outside of clustat and, if so, auto-enable
#   it on the appropriate node.
# - Add a "Cancel" button to each "Confirm" box.
# - Add an ability to trigger a status email. SIGUSR1 via script -> email

use strict;
use warnings;
require "./an-cluster.lib";
require "./an-cdb.lib";
my $THIS_FILE = "an-cdb";

my $conf={
	nodes			=>	"",
	check_using_node	=>	"",
	up_nodes		=>	[],
	online_nodes		=>	[],
	path			=>	{
		'an-cdb_files'		=>	"/var/www/home",
		an_conf			=>	"/etc/an/an.conf",
		cat			=>	"/bin/cat",
		ccs			=>	"/usr/sbin/ccs",
		cluster_conf		=>	"/etc/cluster/cluster.conf",
		clusvcadm		=>	"/usr/sbin/clusvcadm",
		fence_ipmilan		=>	"/sbin/fence_ipmilan",
		gethostip		=>	"/bin/gethostip",
		ifconfig		=>	"/sbin/ifconfig",
		'log'			=>	"/var/log/an-cdb.log",
		lvdisplay		=>	"/sbin/lvdisplay",
		ping			=>	"/usr/bin/ping",
		ssh			=>	"/usr/bin/ssh",
		virsh			=>	"/usr/bin/virsh",
	},
	handles			=>	{
		'log'			=>	"",
	},
	'system'		=>	{
		debug			=>	1,
		username		=>	getpwuid( $< ),
		config_read		=>	0,
		up_nodes		=>	0,
		online_nodes		=>	0,
		show_nodes		=>	0,
		footer_printed		=>	0,
		show_refresh		=>	1,
		ignore_missing_vm	=>	0,
		unusable_ram		=>	2147483648,	# 2 GiB
		os_variant		=>	[
			"win7#!#Microsoft Windows 7",
			"vista#!#Microsoft Windows Vista",
			"winxp64#!#Microsoft Windows XP (x86_64)",
			"winxp#!#Microsoft Windows XP",
			"win2k#!#Microsoft Windows 2000",
			"win2k8#!#Microsoft Windows Server 2008",
			"win2k3#!#Microsoft Windows Server 2003",
			"openbsd4#!#OpenBSD 4.x",
			"freebsd8#!#FreeBSD 8.x",
			"freebsd7#!#FreeBSD 7.x",
			"freebsd6#!#FreeBSD 6.x",
			"solaris9#!#Sun Solaris 9",
			"solaris10#!#Sun Solaris 10",
			"opensolaris#!#Sun OpenSolaris",
			"netware6#!#Novell Netware 6",
			"netware5#!#Novell Netware 5",
			"netware4#!#Novell Netware 4",
			"msdos#!#MS-DOS",
			"generic#!#Generic",
			"debiansqueeze#!#Debian Squeeze",
			"debianlenny#!#Debian Lenny",
			"debianetch#!#Debian Etch",
			"fedora16#!#Fedora 16",
			"fedora15#!#Fedora 15",
			"fedora14#!#Fedora 14",
			"fedora13#!#Fedora 13",
			"fedora12#!#Fedora 12",
			"fedora11#!#Fedora 11",
			"fedora10#!#Fedora 10",
			"fedora9#!#Fedora 9",
			"fedora8#!#Fedora 8",
			"fedora7#!#Fedora 7",
			"fedora6#!#Fedora Core 6",
			"fedora5#!#Fedora Core 5",
			"mes5.1#!#Mandriva Enterprise Server 5.1 and later",
			"mes5#!#Mandriva Enterprise Server 5.0",
			"mandriva2010#!#Mandriva Linux 2010 and later",
			"mandriva2009#!#Mandriva Linux 2009 and earlier",
			"rhel6#!#Red Hat Enterprise Linux 6",
			"rhel5.4#!#Red Hat Enterprise Linux 5.4 or later",
			"rhel5#!#Red Hat Enterprise Linux 5",
			"rhel4#!#Red Hat Enterprise Linux 4",
			"rhel3#!#Red Hat Enterprise Linux 3",
			"rhel2.1#!#Red Hat Enterprise Linux 2.1",
			"sles11#!#Suse Linux Enterprise Server 11",
			"sles10#!#Suse Linux Enterprise Server",
			"ubuntuoneiric#!#Ubuntu 11.10 (Oneiric Ocelot)",
			"ubuntunatty#!#Ubuntu 11.04 (Natty Narwhal)",
			"ubuntumaverick#!#Ubuntu 10.10 (Maverick Meerkat)",
			"ubuntulucid#!#Ubuntu 10.04 (Lucid Lynx)",
			"ubuntukarmic#!#Ubuntu 9.10 (Karmic Koala)",
			"ubuntujaunty#!#Ubuntu 9.04 (Jaunty Jackalope)",
			"ubuntuintrepid#!#Ubuntu 8.10 (Intrepid Ibex)",
			"ubuntuhardy#!#Ubuntu 8.04 LTS (Hardy Heron)",
			"virtio26#!#Generic 2.6.25 or later kernel with virtio",
			"generic26#!#Generic 2.6.x kernel",
			"generic24#!#Generic 2.4.x kernel",
		],
	},
};

find_executables($conf);
read_conf($conf);

# I need to convert the global configuration of the clusters to the format I use here.
convert_cluster_config($conf);

# If there is only one cluster defined, use it. Note that I need a special
# exception in get_cgi_vars() for this to work properly.
if (not $conf->{cgi}{cluster})
{
	my @cluster_name;
	foreach my $cluster (keys %{$conf->{clusters}})
	{
		push @cluster_name, $cluster;
	}
	if (@cluster_name == 1)
	{
		$conf->{cgi}{cluster} = $cluster_name[0];
	}
}

# Get the CGI variables I might be passed.
get_cgi_vars($conf, [
	"cluster",
	"task",
	"confirm",
	"host",
	"node",
	"node_cluster_name",
	"storage",
	"target",
	"vm",
	"vm_ram",
	"max_ram",
	"max_cores",
	"max_storage",
	"install_iso",
	"driver_iso",
	"ram",
	"ram_suffix",
	"cpu_cores",
	"vg_list",
	"name",
	"os_variant",
]);

if ($conf->{cgi}{vg_list})
{
	my @more_vars;
	foreach my $vg (split/,/, $conf->{cgi}{vg_list})
	{
		next if not $vg;
		push @more_vars, "vg_$vg";
		push @more_vars, "vg_suffix_$vg";
	}
	get_cgi_vars($conf, \@more_vars);
}

header($conf, "AN!CDB", "Cluster Dashboard", "logo_an-cdb_02.png");

# Do I have a cluster name?
if ($conf->{cgi}{cluster})
{
	if ($conf->{cgi}{task})
	{
		$conf->{'system'}{show_refresh} = 0;
		process_task($conf);
	}
	else
	{
		# Set the node list.
		my $cluster    = $conf->{cgi}{cluster};
		$conf->{nodes} = $conf->{clusters}{$cluster}{nodes};
		scan_cluster($conf);
		display_details($conf);
		#display_details2($conf);
	}
}
else
{
	# Ask the user which cluster they want to look at.
	ask_which_cluster($conf);
}
footer($conf);

exit (0);

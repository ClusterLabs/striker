#!/usr/bin/perl
# 
# AN!MediaConnector
# 
# This allows a mechanism for taking a CD or DVD, turning it into an ISO and
# pushing it to a cluster's /shared/files/ directory. It also allows for 
# connecting and disconnecting these ISOs to and from VMs.
# 
# ToDo: Allow the user to upload a file from their computer and enable a direct
#       download of an ISO from a URL.

use strict;
use warnings;

require "./an-cluster.lib";
require "./an-mc.lib";
my $THIS_FILE = "an-mc";

# Remember to keep 'create_image_and_upload.pl' updated.
my $conf={
	path			=>	{
		an_conf			=>	"/etc/an/an.conf",
		check_dvd		=>	"/var/www/tools/check_dvd",
		do_dd			=>	"/var/www/tools/do_dd",
		'log'			=>	"/var/log/an-mc.log",
		ssh			=>	"/usr/bin/ssh",
		media			=>	"/var/www/home/media/",
		rsync			=>	"/usr/bin/rsync",
		screen			=>	"/usr/bin/screen",
		shared			=>	"/shared/files/",	# This is hard-coded in the file delete function.
		status			=>	"/var/www/home/status/",
	},
	args			=>	{
		check_dvd		=>	"--dvd --no-cddb --no-device-info --no-disc-mode --no-vcd",
		rsync			=>	"-av --partial",
	},
	'system'		=>	{
		dd_block_size		=>	"4M",
	},
};

read_conf($conf);
convert_cluster_config($conf);

get_cgi_vars($conf, [
	"cluster",
	"confirm",
	"dev",
	"file",
	"name",
	"task",
	"url",
]);

# Make STDOUT hot.
$| = 1;

header($conf, "AN!MC", "Media Connector", "logo_an-mc_01.png");

# Do I have a cluster name?
if ($conf->{cgi}{cluster})
{
	my $cluster = $conf->{cgi}{cluster};
	$conf->{nodes} = $conf->{clusters}{$cluster}{nodes};
	if ($conf->{cgi}{task})
	{
		$conf->{'system'}{show_refresh} = 0;
		process_task($conf);
	}
	else
	{
		# Set the node list.
		read_shared($conf);
	}
}
else
{
	# Ask the user which cluster they want to look at.
	ask_which_cluster($conf);
}
footer($conf);


exit 0;

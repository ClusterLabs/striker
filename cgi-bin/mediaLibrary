#!/usr/bin/perl
# 
# AN!MediaConnector
# 
# This allows a mechanism for taking a CD or DVD, turning it into an ISO and
# pushing it to a cluster's /shared/files/ directory. It also allows for 
# connecting and disconnecting these ISOs to and from VMs.
# 
# TODO: Merge this into the main program.
#       

use strict;
use warnings;

use lib 'lib';
use AN::Common;
use AN::Cluster;
use AN::MediaLibrary;

my $THIS_FILE = "mediaLibrary";
# Turn off buffering so that the pinwheel will display while waiting
# for the SSH call(s) to complete.
$| = 1;

my ($conf) = AN::Common::initialize($THIS_FILE);

AN::Cluster::find_executables($conf);
AN::Cluster::read_hosts($conf);
AN::Cluster::read_ssh_config($conf);

# If the configuration file isn't found, we'll switch over to 'Configure'.
if (AN::Common::read_configuration_file($conf))
{
	# Configuration needed, striker.conf doesn't exist.
	print AN::Common::template($conf, "main-page.html", "redirect-to-configure"); 
	exit(1);
}

# I need to convert the global configuration of the clusters to the format I use here.
AN::Cluster::convert_cluster_config($conf);

# If there is only one cluster defined, use it. Note that I need a special
# exception in get_cgi_vars() for this to work properly.
if (not $conf->{cgi}{cluster})
{
	my @cluster_name;
	foreach my $cluster (keys %{$conf->{clusters}})
	{
		push @cluster_name, $cluster;
	}
	if (@cluster_name == 1)
	{
		$conf->{cgi}{cluster} = $cluster_name[0];
	}
}

AN::Cluster::get_cgi_vars($conf, [
	"cluster",
	"confirm",
	"dev",
	"file",
	"name",
	"task",
	"url",
]);

# Print the header.
AN::Cluster::header($conf, "mediaLibrary");

# Do I have a cluster name?
#AN::Cluster::record($conf, "$THIS_FILE ".__LINE__."; cgi::cluster: [$conf->{cgi}{cluster}]\n");
if ($conf->{cgi}{cluster})
{
	my $cluster                      = $conf->{cgi}{cluster};
	$conf->{'system'}{root_password} = $conf->{clusters}{$cluster}{root_pw};
	$conf->{nodes}                   = $conf->{clusters}{$cluster}{nodes};
	#AN::Cluster::record($conf, "$THIS_FILE ".__LINE__."; nodes: [$conf->{nodes}], task: [$conf->{cgi}{task}], system::root_password: [$conf->{'system'}{root_password}]\n");
	if ($conf->{cgi}{task})
	{
		$conf->{'system'}{show_refresh} = 0;
		AN::MediaLibrary::process_task($conf);
	}
	else
	{
		# Set the node list.
		AN::MediaLibrary::read_shared($conf);
	}
}
else
{
	# Ask the user which cluster they want to look at.
	AN::Cluster::ask_which_cluster($conf);
}
AN::Cluster::footer($conf);


exit 0;
